[tool:pytest]
DJANGO_SETTINGS_MODULE = core.settings
python_files = test_*.py *_test.py tests.py
testpaths = tests apps
addopts = 
    --reuse-db
    --cov=.
    --cov-report=html
    --cov-report=xml
    --cov-report=term-missing
    --numprocesses=auto
    --durations=10
    --strict-markers
    --randomly-seed=1234
    --hypothesis-show-statistics
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    webtest: marks tests as webtest (deselect with '-m "not webtest"')
    integration: marks tests as integration (deselect with '-m "not integration"')
    security: marks security related tests
    performance: marks performance tests
    api: marks API tests
    ui: marks UI tests
    unit: marks unit tests
    smoke: marks smoke tests
    regression: marks regression tests
filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning
    error::RuntimeWarning
timeout = 300

[coverage:run]
source = .
branch = True
concurrency = multiprocessing
parallel = True
data_file = .coverage
omit =
    */migrations/*
    */tests/*
    */venv/*
    */.venv/*
    */manage.py
    */wsgi.py
    */asgi.py
    */settings.py
    */apps.py
    */admin.py
    */urls.py
    */__init__.py
    */conftest.py
    */setup.py
    */docs/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
sort = Cover
exclude_lines =
    pragma: no cover
    def __repr__
    def __str__
    if self.debug:
    raise NotImplementedError
    if __name__ == .__main__.:
    class .*\bAbstractBase.*\):
    pass
    raise ImportError
    @abstractmethod
    @abc.abstractmethod
fail_under = 80
skip_empty = True

[coverage:html]
directory = htmlcov
title = FinAsis Test Coverage Report
show_contexts = True

[flake8]
max-line-length = 100
max-complexity = 10
statistics = True
count = True
show-source = True
exclude = 
    .git,
    */migrations/*,
    */static/CACHE/*,
    */venv/*,
    */.venv/*,
    */docs/*,
    */build/*,
    */dist/*
ignore =
    E203,  # whitespace before ':'
    W503,  # line break before binary operator
    F401,  # imported but unused
    E231,  # missing whitespace after ','
per-file-ignores =
    __init__.py:F401,F403
    tests/*:E501
max-doc-length = 100
docstring-convention = google
extend-select = B950
format = ${cyan}%(path)s${reset}:${yellow_bold}%(row)d${reset}:${green_bold}%(col)d${reset}: ${red_bold}%(code)s${reset} %(text)s

[isort]
profile = black
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
line_length = 100
skip =
    .git,
    migrations,
    venv,
    .venv,
    static,
    media

[mypy]
python_version = 3.10
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_return_any = True
strict_optional = True
plugins = 
    mypy_django_plugin.main,
    mypy_drf_plugin.main

[mypy.plugins.django-stubs.main]
django_settings_module = core.settings

[tool:interrogate]
ignore-init-method = True
ignore-init-module = True
ignore-magic = True
ignore-semiprivate = True
ignore-private = True
ignore-property-decorators = True
ignore-module = True
ignore-nested-functions = True
ignore-nested-classes = True
ignore-setters = True
fail-under = 95
exclude = 
    */tests/*,
    */migrations/*,
    setup.py,
    docs/*

[bandit]
targets = .
exclude = */tests/*,*/migrations/*,venv/*,.venv/*
tests = B201,B301
skips = B101,B601

[pylint]
max-line-length = 100
disable = C0111,R0903,C0103
ignore = migrations,venv,.venv
output-format = colorized
score = yes
reports = no
evaluation = 10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10) 