# Django ayarları
DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
DJANGO_DEBUG=False
DJANGO_ALLOWED_HOSTS=finasis.com.tr,www.finasis.com.tr
DJANGO_SETTINGS_MODULE=config.settings.prod

# Veritabanı ayarları
DB_ENGINE=django.db.backends.postgresql
DB_NAME=${DB_NAME}
DB_USER=${DB_USER}
DB_PASSWORD=${DB_PASSWORD}
DB_HOST=db
DB_PORT=5432

# Email ayarları
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_HOST_USER=${EMAIL_HOST_USER}
EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
EMAIL_USE_TLS=True
DEFAULT_FROM_EMAIL=info@finasis.com.tr

# AI Assistant ayarları
AI_ASSISTANT_API_KEY=${AI_ASSISTANT_API_KEY}
AI_ASSISTANT_MODEL=gpt-3.5-turbo
AI_ASSISTANT_MAX_TOKENS=1000

# Blockchain
WEB3_PROVIDER_URL=${WEB3_PROVIDER_URL}
SMART_CONTRACT_ADDRESS=${SMART_CONTRACT_ADDRESS}

# OpenAI settings
OPENAI_API_KEY=${OPENAI_API_KEY}

# Blockchain settings
BLOCKCHAIN_NETWORK=mainnet
BLOCKCHAIN_API_KEY=${BLOCKCHAIN_API_KEY}

# Redis URL
REDIS_URL=redis://redis:6379/1

# E-Belge API ayarları
EDOCUMENT_ENV=PROD
EDOCUMENT_API_KEY=${EDOCUMENT_API_KEY}
EDOCUMENT_API_URL=https://earsiv.efatura.gov.tr
EDOCUMENT_SERVICE_TYPE=EARCHIVE

# Şirket Bilgileri
COMPANY_VKN=${COMPANY_VKN}
COMPANY_NAME=FinAsis Yazılım A.Ş.
COMPANY_WEBSITE=https://finasis.com.tr
COMPANY_EMAIL=info@finasis.com.tr

# Rate limiting
RATELIMIT_ENABLE=True
RATELIMIT_USE_CACHE=default
RATELIMIT_KEY_PREFIX=finasis_prod
RATELIMIT_RATE=100/h
RATELIMIT_BLOCK=True

# JWT Token Ayarları
JWT_ACCESS_TOKEN_LIFETIME_MINUTES=30
JWT_REFRESH_TOKEN_LIFETIME_DAYS=1
JWT_MOBILE_TOKEN_LIFETIME_MINUTES=15
JWT_ADMIN_TOKEN_LIFETIME_HOURS=1
JWT_REMEMBER_ME_LIFETIME_DAYS=7
JWT_SLIDING_TOKEN_LIFETIME_MINUTES=15
JWT_SLIDING_TOKEN_REFRESH_LIFETIME_DAYS=1

# Brute Force Koruma Ayarları
MAX_LOGIN_ATTEMPTS=3
LOGIN_BLOCK_TIME_MINUTES=30

# API Keys
OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY}

# E-Dönüşüm Ayarları
AUTO_STOCK_ENTRY=True

# OCR Ayarları
USE_GOOGLE_VISION=True
GOOGLE_APPLICATION_CREDENTIALS=/app/config/google-credentials.json
OCR_LANGUAGE=tur+eng

# Security Settings
SECURE_SSL_REDIRECT=True
SESSION_COOKIE_SECURE=True
CSRF_COOKIE_SECURE=True
SECURE_BROWSER_XSS_FILTER=True
SECURE_CONTENT_TYPE_NOSNIFF=True
X_FRAME_OPTIONS=DENY
SECURE_HSTS_SECONDS=31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS=True
SECURE_HSTS_PRELOAD=True

# FinAsis Felaket Kurtarma Planı

## Potansiyel Riskler

1. **Donanım Arızası**: Sunucu donanımı arızası
2. **Veri Merkezi Kesintisi**: Elektrik kesintisi, internet kesintisi
3. **Veri Kaybı**: Veritabanı bozulması, silinen veriler
4. **Güvenlik İhlali**: Siber saldırı, yetkisiz erişim
5. **Yazılım Hatası**: Kritik bir hata nedeniyle sistem çökmesi

## Kritik Sistemler ve Etki Süresi

| Sistem | Maksimum Tolere Edilebilir Kesinti | Kurtarma Noktası Hedefi |
|--------|-------------------------------------|-------------------------|
| Web Uygulaması | 4 saat | 15 dakika |
| Veritabanı | 2 saat | 5 dakika |
| Dosya Deposu | 8 saat | 1 saat |
| E-posta | 24 saat | 24 saat | 

## Veritabanı Kurtarma

### 1. PostgreSQL Kurtarma

```bash
# Son yedeği indir
aws s3 cp s3://finasis-backups/db/$(aws s3 ls s3://finasis-backups/db/ | sort | tail -n 1 | awk '{print $4}') /tmp/latest_db_backup.sql.gz

# Geçici veritabanı sunucusu başlat
docker run --name postgres-recovery -e POSTGRES_PASSWORD=temppass -d postgres:14

# Veritabanını geri yükle
gunzip -c /tmp/latest_db_backup.sql.gz | docker exec -i postgres-recovery psql -U postgres

# Veri bütünlüğünü doğrula
docker exec -i postgres-recovery psql -U postgres -c "SELECT COUNT(*) FROM users;"
docker exec -i postgres-recovery psql -U postgres -c "SELECT MAX(created_at) FROM invoices;"
```

### 2. Medya Dosyaları Kurtarma

```bash
# Son medya yedeğini indir
aws s3 cp s3://finasis-backups/media/$(aws s3 ls s3://finasis-backups/media/ | sort | tail -n 1 | awk '{print $4}') /tmp/latest_media_backup.tar.gz

# Geri yükle
mkdir -p /tmp/restored_media
tar -xzf /tmp/latest_media_backup.tar.gz -C /tmp/restored_media

# Docker volume'a kopyala
docker volume create finasis_media_volume
docker run --rm -v finasis_media_volume:/target -v /tmp/restored_media:/source alpine cp -r /source/. /target/
```

### 3. Tam Sistem Kurtarma

```bash
# 1. Yeni sunucu hazırla
# 2. Docker ve Docker Compose kur
curl -fsSL https://get.docker.com | sh
apt-get install -y docker-compose

# 3. Kaynak kodlarını çek
git clone https://github.com/your-org/finasis.git
cd finasis

# 4. Çevre değişkenlerini ayarla
cp .env.prod.example .env.prod
# .env.prod dosyasını düzenle

# 5. Yedekleri geri yükle
./scripts/restore_backup.sh latest

# 6. Sistemi başlat
docker-compose -f docker-compose.prod.yml up -d

# 7. Sistemi doğrula
./scripts/verify_system.sh
``` 

## Felaket Kurtarma Ekibi

| Rol | Sorumlu Kişi | İletişim Bilgileri |
|-----|--------------|---------------------|
| Kurtarma Koordinatörü | Ali Yılmaz | Tel: +90 555 123 4567, Email: ali@finasis.com.tr |
| Veritabanı Uzmanı | Ayşe Demir | Tel: +90 555 234 5678, Email: ayse@finasis.com.tr |
| Sistem Yöneticisi | Mehmet Kaya | Tel: +90 555 345 6789, Email: mehmet@finasis.com.tr |
| Ağ Uzmanı | Zeynep Şahin | Tel: +90 555 456 7890, Email: zeynep@finasis.com.tr |
| Müşteri İletişim | Emre Can | Tel: +90 555 567 8901, Email: emre@finasis.com.tr |

## Bildirim Prosedürü

1. **İlk Tespit**: Sorun tespit edildiğinde, Kurtarma Koordinatörüne bildirilir
2. **Değerlendirme**: Koordinatör durumu değerlendirir ve gerekli ekip üyelerini haberdar eder
3. **Müşteri Bildirimi**: Kesinti 30 dakikadan fazla sürecekse, Müşteri İletişim Sorumlusu müşterilere bildirim gönderir
4. **Durum Güncellemeleri**: Her saat başı durum güncellemesi yapılır
5. **Çözüm Bildirimi**: Sorun çözüldüğünde tüm paydaşlara bildirim yapılır 

## Felaket Kurtarma Testleri

- **Sıklık**: 3 ayda bir
- **Kapsam**: Tam sistem kurtarma testi, alternatif veri merkezine geçiş testi
- **Dökümantasyon**: Her test sonrası bulguları ve geliştirme önerilerini içeren rapor hazırlanır

## Eğitim Planı

- Yeni ekip üyeleri için felaket kurtarma eğitimi
- Yılda bir tüm ekip için tazeleme eğitimi
- Simülasyon tatbikatları (yılda 2 kez) 

## E-Belge Sistemini Kurtarma

```bash
# E-Belge verilerini geri yükle
aws s3 cp s3://finasis-backups/edocuments/latest /tmp/edocs --recursive

# Belgeleri doğrula ve sisteme yükle
python manage.py verify_edocuments --path=/tmp/edocs
python manage.py import_edocuments --path=/tmp/edocs
```

## Blok Zinciri Entegrasyonu Kurtarma

```bash
# Smart contract adresini doğrula
python manage.py verify_blockchain_contracts

# Eksik işlemleri senkronize et
python manage.py sync_blockchain_transactions
``` 