version: '3.8'

services:
  # Django web uygulaması
  web:
    build: .
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.prod
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0

  # PostgreSQL veritabanı
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_DB=${DB_NAME:-finasis}

  # Redis (önbellek ve mesaj kuyruğu için)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Celery worker (arka plan görevleri için)
  celery:
    build: .
    command: celery -A core worker -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - web
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.prod
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0

  # Celery beat (zamanlanmış görevler için)
  celery_beat:
    build: .
    command: celery -A core beat -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - celery
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.prod
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0

  # Nginx (statik dosya sunumu ve proxy için)
  nginx:
    image: nginx:1.23-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - web

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: 