# Generated by Django 5.2 on 2025-04-27 07:41

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Kategori Adı')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='stock_management.category')),
            ],
            options={
                'verbose_name': 'Kategori',
                'verbose_name_plural': 'Kategoriler',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Ürün Adı')),
                ('sku', models.CharField(max_length=50, unique=True, verbose_name='SKU')),
                ('barcode', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Barkod')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Birim Fiyat')),
                ('tax_rate', models.DecimalField(decimal_places=2, default=Decimal('18.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Vergi Oranı')),
                ('min_stock_level', models.PositiveIntegerField(default=0, verbose_name='Minimum Stok Seviyesi')),
                ('max_stock_level', models.PositiveIntegerField(default=1000, verbose_name='Maksimum Stok Seviyesi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='stock_management.category')),
            ],
            options={
                'verbose_name': 'Ürün',
                'verbose_name_plural': 'Ürünler',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StockAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('LOW', 'Düşük Stok'), ('HIGH', 'Yüksek Stok'), ('EXPIRING', 'Son Kullanma Tarihi Yaklaşıyor')], max_length=20, verbose_name='Uyarı Tipi')),
                ('message', models.TextField(verbose_name='Mesaj')),
                ('is_read', models.BooleanField(default=False, verbose_name='Okundu')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_alerts', to='stock_management.product')),
            ],
            options={
                'verbose_name': 'Stok Uyarısı',
                'verbose_name_plural': 'Stok Uyarıları',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_date', models.DateField(verbose_name='Sayım Tarihi')),
                ('status', models.CharField(choices=[('draft', 'Taslak'), ('in_progress', 'Devam Ediyor'), ('completed', 'Tamamlandı'), ('cancelled', 'İptal Edildi')], default='draft', max_length=20, verbose_name='Durum')),
                ('notes', models.TextField(blank=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_counts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Stok Sayımı',
                'verbose_name_plural': 'Stok Sayımları',
                'ordering': ['-count_date'],
            },
        ),
        migrations.CreateModel(
            name='StockCountItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expected_quantity', models.PositiveIntegerField(verbose_name='Beklenen Miktar')),
                ('counted_quantity', models.PositiveIntegerField(verbose_name='Sayılan Miktar')),
                ('difference', models.IntegerField(verbose_name='Fark')),
                ('notes', models.TextField(blank=True, verbose_name='Notlar')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock_management.product')),
                ('stock_count', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='stock_management.stockcount')),
            ],
            options={
                'verbose_name': 'Stok Sayım Kalemi',
                'verbose_name_plural': 'Stok Sayım Kalemleri',
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('IN', 'Giriş'), ('OUT', 'Çıkış'), ('ADJ', 'Düzeltme')], max_length=3, verbose_name='Hareket Tipi')),
                ('quantity', models.IntegerField(verbose_name='Miktar')),
                ('reference', models.CharField(blank=True, max_length=100, verbose_name='Referans')),
                ('notes', models.TextField(blank=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements', to='stock_management.product')),
            ],
            options={
                'verbose_name': 'Stok Hareketi',
                'verbose_name_plural': 'Stok Hareketleri',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Depo Adı')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Depo Kodu')),
                ('address', models.TextField(verbose_name='Adres')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_warehouses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Depo',
                'verbose_name_plural': 'Depolar',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='stockcount',
            name='warehouse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_counts', to='stock_management.warehouse'),
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='Miktar')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Son Güncelleme')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='stock_management.product')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='stock_management.warehouse')),
            ],
            options={
                'verbose_name': 'Stok',
                'verbose_name_plural': 'Stoklar',
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sku'], name='stock_manag_sku_4601ce_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['barcode'], name='stock_manag_barcode_13cc0a_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category'], name='stock_manag_categor_23c6d8_idx'),
        ),
        migrations.AddIndex(
            model_name='stockalert',
            index=models.Index(fields=['product', 'alert_type'], name='stock_manag_product_f54456_idx'),
        ),
        migrations.AddIndex(
            model_name='stockalert',
            index=models.Index(fields=['is_read'], name='stock_manag_is_read_ab4525_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='stockcountitem',
            unique_together={('stock_count', 'product')},
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['product', 'movement_type'], name='stock_manag_product_97aacc_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['created_at'], name='stock_manag_created_e5fb23_idx'),
        ),
        migrations.AddIndex(
            model_name='stock',
            index=models.Index(fields=['product', 'warehouse'], name='stock_manag_product_5e4897_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='stock',
            unique_together={('product', 'warehouse')},
        ),
    ]
