# Generated by Django 5.0.2 on 2025-04-12 07:16

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("accounting", "0002_bank_cashbox_chartofaccounts_stock_stocktransaction"),
        (
            "virtual_company",
            "0002_dailytask_product_alter_virtualcompany_options_and_more",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="KnowledgeBase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Başlık")),
                ("content", models.TextField(verbose_name="İçerik")),
                (
                    "summary",
                    models.TextField(blank=True, null=True, verbose_name="Özet"),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("accounting", "Muhasebe"),
                            ("finance", "Finans"),
                            ("tax", "Vergi"),
                            ("investments", "Yatırımlar"),
                            ("budgeting", "Bütçeleme"),
                            ("business", "İş Dünyası"),
                            ("economics", "Ekonomi"),
                        ],
                        max_length=20,
                        verbose_name="Kategori",
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("beginner", "Başlangıç"),
                            ("intermediate", "Orta"),
                            ("advanced", "İleri"),
                        ],
                        default="beginner",
                        max_length=20,
                        verbose_name="Seviye",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="knowledge_base/",
                        verbose_name="Görsel",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Oluşturulma Tarihi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Güncellenme Tarihi"
                    ),
                ),
                (
                    "tags",
                    models.CharField(
                        blank=True,
                        help_text="Virgülle ayrılmış etiketler",
                        max_length=255,
                        null=True,
                        verbose_name="Etiketler",
                    ),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Aktif")),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="Öne Çıkan"),
                ),
            ],
            options={
                "verbose_name": "Bilgi Bankası",
                "verbose_name_plural": "Bilgi Bankası",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="account",
            name="e_archive_registered",
            field=models.BooleanField(
                default=False, verbose_name="E-Arşiv Mükellefiyeti"
            ),
        ),
        migrations.AddField(
            model_name="account",
            name="e_invoice_registered",
            field=models.BooleanField(
                default=False, verbose_name="E-Fatura Mükellefiyeti"
            ),
        ),
        migrations.AddField(
            model_name="account",
            name="tax_office",
            field=models.CharField(
                blank=True, max_length=100, null=True, verbose_name="Vergi Dairesi"
            ),
        ),
        migrations.AddField(
            model_name="account",
            name="vkn_tckn",
            field=models.CharField(
                blank=True, max_length=11, null=True, verbose_name="VKN/TCKN"
            ),
        ),
        migrations.AddField(
            model_name="invoice",
            name="e_invoice_id",
            field=models.CharField(
                blank=True, max_length=36, null=True, verbose_name="E-Fatura ID"
            ),
        ),
        migrations.AddField(
            model_name="invoice",
            name="e_invoice_status",
            field=models.CharField(
                choices=[
                    ("draft", "Taslak"),
                    ("pending", "Beklemede"),
                    ("approved", "Onaylandı"),
                    ("rejected", "Reddedildi"),
                    ("canceled", "İptal Edildi"),
                ],
                default="draft",
                max_length=20,
                verbose_name="E-Fatura Durumu",
            ),
        ),
        migrations.AddField(
            model_name="invoice",
            name="e_invoice_uuid",
            field=models.CharField(
                blank=True, max_length=36, null=True, verbose_name="E-Fatura UUID"
            ),
        ),
        migrations.AddField(
            model_name="invoice",
            name="is_e_archive",
            field=models.BooleanField(default=False, verbose_name="E-Arşiv mi?"),
        ),
        migrations.AddField(
            model_name="invoice",
            name="is_e_invoice",
            field=models.BooleanField(default=False, verbose_name="E-Fatura mı?"),
        ),
        migrations.AddField(
            model_name="invoice",
            name="is_e_invoice_suitable",
            field=models.BooleanField(default=False, verbose_name="E-Fatura Uygun mu?"),
        ),
        migrations.AddField(
            model_name="invoice",
            name="recipient_email",
            field=models.EmailField(
                blank=True, max_length=254, null=True, verbose_name="E-Posta"
            ),
        ),
        migrations.AddField(
            model_name="invoice",
            name="recipient_tax_office",
            field=models.CharField(
                blank=True, max_length=100, null=True, verbose_name="Vergi Dairesi"
            ),
        ),
        migrations.AddField(
            model_name="invoice",
            name="recipient_vkn_tckn",
            field=models.CharField(
                blank=True, max_length=11, null=True, verbose_name="VKN/TCKN"
            ),
        ),
        migrations.CreateModel(
            name="EDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("e_invoice", "E-Fatura"),
                            ("e_archive", "E-Arşiv Fatura"),
                        ],
                        max_length=15,
                        verbose_name="Belge Türü",
                    ),
                ),
                (
                    "document_uuid",
                    models.UUIDField(
                        default=uuid.uuid4, unique=True, verbose_name="UUID"
                    ),
                ),
                (
                    "document_number",
                    models.CharField(
                        blank=True,
                        max_length=30,
                        null=True,
                        verbose_name="Belge Numarası",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Taslak"),
                            ("pending", "GİB'e Gönderildi"),
                            ("approved", "Onaylandı"),
                            ("rejected", "Reddedildi"),
                            ("canceled", "İptal Edildi"),
                        ],
                        default="draft",
                        max_length=15,
                        verbose_name="Durum",
                    ),
                ),
                (
                    "status_description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Durum Açıklaması"
                    ),
                ),
                (
                    "creation_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Oluşturma Tarihi"
                    ),
                ),
                (
                    "response_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Yanıt Tarihi"
                    ),
                ),
                (
                    "external_id",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Dış Sistem ID",
                    ),
                ),
                (
                    "pdf_url",
                    models.URLField(blank=True, null=True, verbose_name="PDF URL"),
                ),
                (
                    "xml_content",
                    models.TextField(blank=True, null=True, verbose_name="XML İçeriği"),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="edocument_set",
                        to="accounting.invoice",
                    ),
                ),
                (
                    "virtual_company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="virtual_company.virtualcompany",
                    ),
                ),
            ],
            options={
                "verbose_name": "E-Belge",
                "verbose_name_plural": "E-Belgeler",
            },
        ),
        migrations.CreateModel(
            name="EDocumentSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "company_name",
                    models.CharField(max_length=255, verbose_name="Şirket Adı"),
                ),
                ("vkn_tckn", models.CharField(max_length=11, verbose_name="VKN/TCKN")),
                (
                    "tax_office",
                    models.CharField(max_length=100, verbose_name="Vergi Dairesi"),
                ),
                ("address", models.TextField(verbose_name="Adres")),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Telefon"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="E-posta"
                    ),
                ),
                (
                    "integration_type",
                    models.CharField(
                        choices=[
                            ("GIB", "GİB Portal"),
                            ("EFATURA", "E-Fatura Entegratörü"),
                            ("EFINANS", "E-Finans"),
                            ("TEFATURA", "T.C. E-Fatura"),
                            ("CUSTOM", "Özel Entegrasyon"),
                        ],
                        max_length=20,
                        verbose_name="Entegrasyon Tipi",
                    ),
                ),
                (
                    "api_url",
                    models.URLField(blank=True, null=True, verbose_name="API URL"),
                ),
                (
                    "api_key",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="API Anahtarı",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Kullanıcı Adı",
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        blank=True, max_length=100, null=None, verbose_name="Şifre"
                    ),
                ),
                (
                    "is_test_mode",
                    models.BooleanField(default=True, verbose_name="Test Modu"),
                ),
                ("is_active", models.BooleanField(default=False, verbose_name="Aktif")),
                (
                    "virtual_company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="virtual_company.virtualcompany",
                    ),
                ),
            ],
            options={
                "verbose_name": "E-Belge Ayarları",
                "verbose_name_plural": "E-Belge Ayarları",
            },
        ),
        migrations.CreateModel(
            name="EDocumentTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=100, verbose_name="Şablon Adı")),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("e_invoice", "E-Fatura"),
                            ("e_archive", "E-Arşiv"),
                            ("e_dispatch", "E-İrsaliye"),
                        ],
                        max_length=20,
                        verbose_name="Belge Türü",
                    ),
                ),
                ("template_html", models.TextField(verbose_name="HTML Şablonu")),
                (
                    "is_default",
                    models.BooleanField(default=False, verbose_name="Varsayılan mı?"),
                ),
                (
                    "virtual_company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="virtual_company.virtualcompany",
                    ),
                ),
            ],
            options={
                "verbose_name": "E-Belge Şablonu",
                "verbose_name_plural": "E-Belge Şablonları",
            },
        ),
        migrations.CreateModel(
            name="EInvoiceLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("send", "Gönderim"),
                            ("query", "Sorgulama"),
                            ("cancel", "İptal"),
                            ("accept", "Kabul"),
                            ("reject", "Red"),
                        ],
                        max_length=50,
                        verbose_name="İşlem",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "Başarılı"),
                            ("error", "Hata"),
                            ("pending", "Beklemede"),
                        ],
                        max_length=50,
                        verbose_name="Durum",
                    ),
                ),
                (
                    "message",
                    models.TextField(blank=True, null=True, verbose_name="Mesaj"),
                ),
                (
                    "request_data",
                    models.TextField(
                        blank=True, null=True, verbose_name="İstek Verisi"
                    ),
                ),
                (
                    "response_data",
                    models.TextField(
                        blank=True, null=True, verbose_name="Yanıt Verisi"
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="e_invoice_logs",
                        to="accounting.invoice",
                    ),
                ),
                (
                    "virtual_company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="virtual_company.virtualcompany",
                    ),
                ),
            ],
            options={
                "verbose_name": "E-Fatura Log",
                "verbose_name_plural": "E-Fatura Logları",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="EInvoiceSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "api_key",
                    models.CharField(max_length=255, verbose_name="API Anahtarı"),
                ),
                (
                    "username",
                    models.CharField(max_length=100, verbose_name="Kullanıcı Adı"),
                ),
                ("password", models.CharField(max_length=100, verbose_name="Şifre")),
                ("service_url", models.URLField(verbose_name="Servis URL")),
                (
                    "company_name",
                    models.CharField(max_length=255, verbose_name="Firma Adı"),
                ),
                (
                    "tax_office",
                    models.CharField(max_length=100, verbose_name="Vergi Dairesi"),
                ),
                (
                    "tax_number",
                    models.CharField(max_length=11, verbose_name="Vergi Numarası"),
                ),
                (
                    "is_test_mode",
                    models.BooleanField(default=True, verbose_name="Test Modu"),
                ),
                ("is_active", models.BooleanField(default=False, verbose_name="Aktif")),
                (
                    "virtual_company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="virtual_company.virtualcompany",
                    ),
                ),
            ],
            options={
                "verbose_name": "E-Fatura Ayarları",
                "verbose_name_plural": "E-Fatura Ayarları",
            },
        ),
        migrations.CreateModel(
            name="DailyTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Başlık")),
                ("description", models.TextField(verbose_name="Açıklama")),
                (
                    "learning_objective",
                    models.TextField(
                        blank=True,
                        help_text="Bu görev tamamlandığında kullanıcının öğreneceği kavram veya beceri",
                        null=True,
                        verbose_name="Öğrenim Hedefi",
                    ),
                ),
                (
                    "completion_hints",
                    models.TextField(
                        blank=True,
                        help_text="Görevi tamamlamak için yardımcı ipuçları",
                        null=True,
                        verbose_name="Tamamlama İpuçları",
                    ),
                ),
                (
                    "resources",
                    models.TextField(
                        blank=True,
                        help_text="Görevle ilgili faydalı bağlantılar ve kaynaklar",
                        null=True,
                        verbose_name="İlgili Kaynaklar",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("accounting", "Muhasebe"),
                            ("finance", "Finans"),
                            ("tax", "Vergi"),
                            ("investments", "Yatırımlar"),
                            ("budgeting", "Bütçeleme"),
                            ("business", "İş Dünyası"),
                            ("economics", "Ekonomi"),
                        ],
                        max_length=20,
                        verbose_name="Kategori",
                    ),
                ),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("beginner", "Başlangıç"),
                            ("intermediate", "Orta"),
                            ("advanced", "İleri"),
                        ],
                        default="beginner",
                        max_length=20,
                        verbose_name="Zorluk",
                    ),
                ),
                (
                    "points",
                    models.PositiveIntegerField(default=10, verbose_name="Puanlar"),
                ),
                (
                    "estimated_time",
                    models.PositiveIntegerField(
                        default=15, verbose_name="Tahmini Süre (dakika)"
                    ),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Aktif")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Oluşturulma Tarihi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Güncellenme Tarihi"
                    ),
                ),
                (
                    "knowledge_required",
                    models.ManyToManyField(
                        blank=True,
                        related_name="related_tasks",
                        to="accounting.knowledgebase",
                    ),
                ),
            ],
            options={
                "verbose_name": "Günlük Görev",
                "verbose_name_plural": "Günlük Görevler",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="KnowledgeBaseRelatedItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Başlık")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Açıklama"),
                ),
                ("url", models.URLField(blank=True, null=True, verbose_name="URL")),
                (
                    "resource_type",
                    models.CharField(
                        choices=[
                            ("article", "Makale"),
                            ("video", "Video"),
                            ("document", "Döküman"),
                            ("website", "Web Sitesi"),
                            ("tool", "Araç"),
                        ],
                        default="article",
                        max_length=20,
                        verbose_name="Kaynak Tipi",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(default=0, verbose_name="Sıralama"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Oluşturulma Tarihi"
                    ),
                ),
                (
                    "knowledge_base",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_items",
                        to="accounting.knowledgebase",
                        verbose_name="Bilgi Bankası",
                    ),
                ),
            ],
            options={
                "verbose_name": "İlişkili Öğe",
                "verbose_name_plural": "İlişkili Öğeler",
                "ordering": ["order", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserDailyTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "completed",
                    models.BooleanField(default=False, verbose_name="Tamamlandı"),
                ),
                (
                    "completion_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Tamamlanma Tarihi"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notlar"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Oluşturulma Tarihi"
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_tasks",
                        to="accounting.dailytask",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="daily_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Kullanıcı Görevi",
                "verbose_name_plural": "Kullanıcı Görevleri",
                "ordering": ["-created_at"],
                "unique_together": {("user", "task")},
            },
        ),
        migrations.CreateModel(
            name="UserKnowledgeRead",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "read_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Okuma Tarihi"
                    ),
                ),
                (
                    "read_count",
                    models.PositiveIntegerField(default=1, verbose_name="Okuma Sayısı"),
                ),
                (
                    "last_read",
                    models.DateTimeField(auto_now=True, verbose_name="Son Okuma"),
                ),
                (
                    "knowledge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_reads",
                        to="accounting.knowledgebase",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="knowledge_reads",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Kullanıcı Okuması",
                "verbose_name_plural": "Kullanıcı Okumaları",
                "ordering": ["-last_read"],
                "unique_together": {("user", "knowledge")},
            },
        ),
    ]
