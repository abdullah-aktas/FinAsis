name: FinAsis Feature Branch İş Akışı

on:
  push:
    branches:
      - 'feature/**'
  pull_request:
    branches:
      - develop

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black isort
          npm ci

      - name: Run Python linting
        run: |
          flake8 .
          black . --check
          isort . --check-only

      - name: Run Node.js linting
        run: npm run lint

  test:
    needs: lint
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: finasis_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DB_NAME: finasis_test
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: localhost
      DB_PORT: 5432
      DJANGO_SETTINGS_MODULE: config.settings.test

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-django pytest-cov
          npm ci

      - name: Run migrations
        run: python manage.py migrate

      - name: Run Python tests
        run: pytest --cov=. --cov-report=xml

      - name: Run JavaScript tests
        run: npm test

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  security-scan:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit safety

      - name: Run Python security scan
        run: |
          bandit -r . -x tests,scripts
          safety check

      - name: Run npm audit
        run: npm audit

  build:
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: finasis:feature-test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-dev:
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3

      - name: Get branch name
        id: branch-name
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

      - name: Build and tag Docker image
        run: |
          docker build -t finasis:feature-${{ steps.branch-name.outputs.BRANCH_NAME }} .
          docker tag finasis:feature-${{ steps.branch-name.outputs.BRANCH_NAME }} ${{ secrets.DOCKERHUB_USERNAME }}/finasis:feature-${{ steps.branch-name.outputs.BRANCH_NAME }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/finasis:feature-${{ steps.branch-name.outputs.BRANCH_NAME }}

      - name: Deploy to dev environment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          key: ${{ secrets.DEV_SSH_KEY }}
          script: |
            cd /opt/finasis
            
            # Değişkenleri ayarla
            export FEATURE_BRANCH="${{ steps.branch-name.outputs.BRANCH_NAME }}"
            export DOCKER_IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/finasis:feature-${FEATURE_BRANCH}"
            export CONTAINER_NAME="finasis-feature-${FEATURE_BRANCH//\//-}"
            export PORT=$(( 8000 + RANDOM % 100 ))
            
            # Eski feature branch container'ını durdur ve sil
            docker stop ${CONTAINER_NAME} || true
            docker rm ${CONTAINER_NAME} || true
            
            # Yeni image'ı çek
            docker pull ${DOCKER_IMAGE}
            
            # Container'ı başlat
            docker run -d --name ${CONTAINER_NAME} \
              -p ${PORT}:8000 \
              --env-file .env.dev \
              --network finasis-network \
              ${DOCKER_IMAGE}
            
            # Bilgileri kaydet
            echo "${FEATURE_BRANCH} branch'i ${PORT} portunda çalışıyor." >> feature_deployments.txt
            
            echo "Feature branch ${FEATURE_BRANCH} başarıyla ${PORT} portunda dağıtıldı: http://dev.finasis.com.tr:${PORT}"

      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL || 'geliştirme' }}
          SLACK_COLOR: '#3498DB'
          SLACK_ICON: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
          SLACK_TITLE: 'Feature Branch Dağıtımı 🚀'
          SLACK_MESSAGE: |
            Feature branch başarıyla dağıtıldı!
            
            🔧 Branch: ${{ steps.branch-name.outputs.BRANCH_NAME }}
            🧑‍💻 Geliştirici: ${{ github.actor }}
            🔗 Commit: ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}
            
            Dağıtım URL'sini öğrenmek için sunucuda `/opt/finasis/feature_deployments.txt` dosyasını kontrol edin.
          SLACK_FOOTER: 'FinAsis CI/CD Sistemi'
          SLACK_USERNAME: 'FinAsis Bot' 