name: FinAsis Hotfix İş Akışı

on:
  push:
    branches:
      - 'hotfix/**'
  workflow_dispatch:
    inputs:
      hotfix_branch:
        description: 'Hotfix branch adı (ör: hotfix/login-sorunu)'
        required: true
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          npm ci

      - name: Run tests
        run: |
          pytest -xvs --cov=. --cov-report=term-missing
          npm run test

  deploy-to-production:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t finasis:hotfix-${{ github.sha }} .

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: |
          docker tag finasis:hotfix-${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/finasis:hotfix-${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/finasis:hotfix-${{ github.sha }}

      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          script: |
            cd /opt/finasis
            
            # Yedekleme yap
            echo "Yedekleme yapılıyor..."
            ./scripts/backup.sh
            
            # Docker imajını çek
            echo "Hotfix docker imajı çekiliyor..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/finasis:hotfix-${{ github.sha }}
            
            # İmajı yeniden etiketle
            docker tag ${{ secrets.DOCKERHUB_USERNAME }}/finasis:hotfix-${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/finasis:latest
            
            # Servisleri güncelle
            docker-compose -f docker-compose.prod.yml down
            docker-compose -f docker-compose.prod.yml up -d
            
            # Temizlik
            docker image prune -f
            
            echo "Hotfix dağıtımı tamamlandı!"

      - name: Health check
        run: |
          echo "Sağlık kontrolü başlıyor..."
          for i in {1..6}; do
            if curl -f ${{ secrets.PROD_URL }}/health/; then
              echo "Sağlık kontrolü başarılı!"
              exit 0
            fi
            echo "Deneme $i başarısız, 10 saniye bekleniyor..."
            sleep 10
          done
          echo "Sağlık kontrolü başarısız!"
          exit 1

  merge-to-main:
    needs: deploy-to-production
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Set Git Identity
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          
      - name: Merge hotfix to main
        run: |
          HOTFIX_BRANCH="${{ github.event_name == 'workflow_dispatch' && github.event.inputs.hotfix_branch || github.ref_name }}"
          git fetch origin main
          git checkout main
          git merge --no-ff $HOTFIX_BRANCH -m "Merge hotfix: $HOTFIX_BRANCH"
          git push origin main
  
  merge-to-develop:
    needs: merge-to-main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Set Git Identity
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          
      - name: Merge hotfix to develop
        run: |
          HOTFIX_BRANCH="${{ github.event_name == 'workflow_dispatch' && github.event.inputs.hotfix_branch || github.ref_name }}"
          git fetch origin develop
          git checkout develop
          git merge --no-ff $HOTFIX_BRANCH -m "Merge hotfix: $HOTFIX_BRANCH"
          git push origin develop

  notify:
    needs: [merge-to-main, merge-to-develop]
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL || 'genel' }}
          SLACK_COLOR: '#FF8000'
          SLACK_ICON: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
          SLACK_TITLE: 'Hotfix Dağıtıldı! 🔥'
          SLACK_MESSAGE: |
            Hotfix başarıyla dağıtıldı ve hem main hem de develop dallarına merge edildi.
            
            🔧 Branch: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.hotfix_branch || github.ref_name }}
            🧑‍💻 Sorumlu: ${{ github.actor }}
            🔗 Commit: ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}
          SLACK_FOOTER: 'FinAsis CI/CD Sistemi'
          SLACK_USERNAME: 'FinAsis Bot' 