user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    sendfile on;
    keepalive_timeout 65;

    # Gzip Compression
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Upstream tanımlamaları
    upstream django_backend {
        server django:8000;
    }

    upstream frontend {
        server frontend:3000;
    }

    upstream finasis {
        server web:8000;
    }

    # Ana sunucu bloğu
    server {
        listen 80;
        server_name localhost;

        client_max_body_size 100M;

        # Frontend
        location / {
            proxy_pass http://finasis;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # Backend API
        location /api/ {
            proxy_pass http://django_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Admin paneli
        location /admin/ {
            proxy_pass http://django_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Statik dosyalar
        location /static/ {
            alias /app/staticfiles/;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
        }

        # Medya dosyaları
        location /media/ {
            alias /app/media/;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
        }

        # Monitoring
        location /monitoring/ {
            proxy_pass http://grafana:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Sağlık kontrolü
        location /health/ {
            access_log off;
            return 200 "healthy\n";
        }
    }
} 